[
  {
    "objectID": "src/quarto.html",
    "href": "src/quarto.html",
    "title": "Notebooks",
    "section": "",
    "text": "VSCode/RStudio -&gt; Render button\nTerminal -&gt; quarto preview\nTerminal -&gt; quarto preview help",
    "crumbs": [
      "Home",
      "Notebooks",
      "Render & Review"
    ]
  },
  {
    "objectID": "src/quarto.html#render-review",
    "href": "src/quarto.html#render-review",
    "title": "Notebooks",
    "section": "",
    "text": "VSCode/RStudio -&gt; Render button\nTerminal -&gt; quarto preview\nTerminal -&gt; quarto preview help",
    "crumbs": [
      "Home",
      "Notebooks",
      "Render & Review"
    ]
  },
  {
    "objectID": "src/quarto.html#render-wo-review",
    "href": "src/quarto.html#render-wo-review",
    "title": "Notebooks",
    "section": "Render w/o Review",
    "text": "Render w/o Review\n\nTerminal -&gt; quarto render\nTerminal -&gt; quarto render help",
    "crumbs": [
      "Home",
      "Notebooks",
      "Render & Review"
    ]
  },
  {
    "objectID": "src/quarto.html#references",
    "href": "src/quarto.html#references",
    "title": "Notebooks",
    "section": "References",
    "text": "References\n\nQuarto Reference",
    "crumbs": [
      "Home",
      "Notebooks",
      "Render & Review"
    ]
  },
  {
    "objectID": "src/about.html",
    "href": "src/about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "Home",
      "Notebooks",
      "About"
    ]
  },
  {
    "objectID": "src/index.html",
    "href": "src/index.html",
    "title": "Notebooks",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "Home",
      "Notebooks"
    ]
  },
  {
    "objectID": "src/r-basics.html",
    "href": "src/r-basics.html",
    "title": "Notebooks",
    "section": "",
    "text": "Sources\nGeneral Information\nData Types\nData Structure\nBasics\nFiles, Data Frames, & Plots\nData Manipulation using dplyr and tidyr\nVisualization Using ggplot2",
    "crumbs": [
      "Home",
      "Notebooks",
      "Table of Content"
    ]
  },
  {
    "objectID": "src/r-basics.html#table-of-content",
    "href": "src/r-basics.html#table-of-content",
    "title": "Notebooks",
    "section": "",
    "text": "Sources\nGeneral Information\nData Types\nData Structure\nBasics\nFiles, Data Frames, & Plots\nData Manipulation using dplyr and tidyr\nVisualization Using ggplot2",
    "crumbs": [
      "Home",
      "Notebooks",
      "Table of Content"
    ]
  },
  {
    "objectID": "src/r-basics.html#sources",
    "href": "src/r-basics.html#sources",
    "title": "Notebooks",
    "section": "Sources",
    "text": "Sources\n\nOU Software Carpentry Workshop (check other workshops here)\n\nMain Tutorial\nData Carpentry with R\nSoftware Carpentry with R\nEtherpad\nGoogle Doc\n\nIntro to ggplot by Allison Horst\nR for Data Science book by Garrett Grolemund and Hadley Wickham",
    "crumbs": [
      "Home",
      "Notebooks",
      "Table of Content"
    ]
  },
  {
    "objectID": "src/r-basics.html#general-information",
    "href": "src/r-basics.html#general-information",
    "title": "Notebooks",
    "section": "General Information",
    "text": "General Information\n\nCreating a project instead of a file comes with the advantage of saving the workspace settings\nCtrl+Enter to run the line of code",
    "crumbs": [
      "Home",
      "Notebooks",
      "Table of Content"
    ]
  },
  {
    "objectID": "src/r-basics.html#data-types",
    "href": "src/r-basics.html#data-types",
    "title": "Notebooks",
    "section": "Data Types",
    "text": "Data Types\n\ncharacter\nnumeric\nlogical\nraw\nimaginary numbers\n\n\nclass(x)    # give the data type of x\n\n\nMixing Data Types\n\ncharacter + numeric = character\nnumeric + logical = numeric\nnumeric + character + logical = character",
    "crumbs": [
      "Home",
      "Notebooks",
      "Table of Content"
    ]
  },
  {
    "objectID": "src/r-basics.html#data-structure",
    "href": "src/r-basics.html#data-structure",
    "title": "Notebooks",
    "section": "Data Structure",
    "text": "Data Structure\n\nvector: hold single type of data\nmatrix: 2D vector\nlist: generic vector, each of its element can be anything (character list of lists)\ndata frame: table where columns represent vectors\ntibbles: data frames, but slightly tweaked to work better in the tidyverse\nfactor\n\n\nstr(x)      # give the structure type of x\nlength(x)   # length of structure",
    "crumbs": [
      "Home",
      "Notebooks",
      "Table of Content"
    ]
  },
  {
    "objectID": "src/r-basics.html#basics",
    "href": "src/r-basics.html#basics",
    "title": "Notebooks",
    "section": "Basics",
    "text": "Basics\nAssignment\n\nx &lt;- 3      # assing 3 to x\n(x &lt;- 3)    # assing 3 to x & print the result to console\n\nGetting Help\n\nargs(round) # bring the interface\n?round      # bring the help file\n\nDealing with Structure\n\n# concatenate set of values to create vector\nweight_g &lt;- c(50, 60, 3, 9)\n\n# utalizing logical values to pull specific values\nweight_g[weight_g &lt; 10 & weight_g &gt; 60 | weight_g == 50]\n\n# pull dog & cat records\nanimals[animals %in% c(\"dog\", \"cat\")]\nanimals[animals == \"dog\" | animals == \"cat\"]\n\nStatistics\n\n# signaling missing daa using NA\nheights &lt;- c(2, 3, NA, 4)\n\n# get mean while ignoring missing data\nmean(heights, na.rm = TRUE)\n\n# how to use mean\n?mean",
    "crumbs": [
      "Home",
      "Notebooks",
      "Table of Content"
    ]
  },
  {
    "objectID": "src/r-basics.html#files-data-frames-plots",
    "href": "src/r-basics.html#files-data-frames-plots",
    "title": "Notebooks",
    "section": "Files, Data Frames, & Plots",
    "text": "Files, Data Frames, & Plots\nLoading file from repository and saving it locally on disk. It is always a good idea to structure your workspace. See Best Practices for Scientific Computing paper for more information.\n\ndownload.file(url = “https://ndownloader.figshare.com/files/2292169”, \n    destfile = “data/portal_data_joined.csv”)\n\nLoad file to R as data frame\n\nsurveys &lt;- read.csv(\"data/portal_data_joined.csv\")\n\nInspecting data frame\n\nclass(surveys)  # data type\nstr(surveys)    # structure\ndim(surveys)    # dimension\nnrow(surveys)\nncol(surveys)\nsummary(surveys)\n\nShow first/last few objects/records/rows\n\nhead(surveys)\ntail(surveys)\n\nRetreive specific element/row/column\n\nsurveys[1,1]    # element[1,1]\nsurveys[1, ]    # row 1\nsurveys[ ,1]    # column 1\nsurveys$sex # column by name\n\nDealing with factor (categorical) columns. R convert columns that contain characters to factors by default. Factors are treated as integer vectors. By default, R sorts levels in alphabetical order.\n\nlevels(surveys$sex)\nnlevels(surveys$sex)\n\n# reorder factors (to get better plots)\nsurveys$sex_ordered &lt;- factor(surveys$sex, level=c(\"F\", \"M\", \"\"))\nstr(surveys$sex_ordered)\nlevels(surveys$sex_ordered)\nnlevels(surveys$sex_ordered)\n\nPloting Histogram\n\nplot(surveys$sex)\nplos(surveys$sex_ordered)\n\n# enhance the plot\nlevels(surveys$sex_ordered)[1] &lt;- \"Female\"\nlevels(surveys$sex_ordered)[2] &lt;- \"Male\"\nplos(surveys$sex_ordered)",
    "crumbs": [
      "Home",
      "Notebooks",
      "Table of Content"
    ]
  },
  {
    "objectID": "src/r-basics.html#data-manipulation-using-dplyr-and-tidyr",
    "href": "src/r-basics.html#data-manipulation-using-dplyr-and-tidyr",
    "title": "Notebooks",
    "section": "Data Manipulation using dplyr and tidyr",
    "text": "Data Manipulation using dplyr and tidyr\n\ntdlyr\n\nmakes manipulation of data easier\nbuilt to work with data frames directly\ncan direclty work with data stored in an external database which give the advantage of onlying brining what we need to the memoery to work on without having to bring the whole DB\n\ntidyr\n\nallows to swiftly convert b/w different data formats for plotting & analysis in order to accomodate the different requirements by different functions\n\nsometime we want one row per measurement\nothertimes we want the data aggregated like when ploting\n\n\n\nBefore using tdlyr and tidyr:\n\nInstall tidyverse package: umberella-package that install several packages (tidyr, dplyr, ggplot2 tibble, magrittr, etc.)\nLoad the package each session\n\nLoad the package\n\nlibrary(\"tidyverse\")\n\nLoad & inspect data\n\n# notice the '-' instead of '.' of basic R\nsurveys &lt;- read_csv(\"data/portal_data_joined.csv\")\n\nstr(surveys)    # structure: tbl_df (tibble)\nview(surveys)   # preview\n\n# select columns\nselect(surveys, plot_id, species_id, weight)\n\n# select all columns except ...\nselect(surveys, -sex)\n\n# choose rows based on criteria\nfilter(surveys, year == 1995)\n\nPiping: Sending the results of one function to another\n\n# in multiple steps\nsurvey_less5 &lt;- filter(surveys, weigth &lt; 5)\nsurvey_sml &lt;- select(survey_less5, species_id, sex, weight)\n\n# in one long step\nsurvey_sml &lt;- select(filter(surveys, weigth &lt; 5), species_id, sex, weight)\n\n# using pipe %&gt;% of magritter package.  Use Ctrl + Shift + M to add\nsurvey_sml &lt;- surveys %&gt;%\n    filter(weight &lt; 5) %&gt;%\n    select(species_id, sex, weight)\n\nSummary of groups of 1+ coluumn\n\n# one factor\nsurveys %&gt;%\n    group_by(sex) %&gt;%\n    summarise(mean_weight = mean(weight, na.rm = TRUE))\n    \n# two factors\nsurveys %&gt;%\n    group_by(sex, species) %&gt;%\n    summarise(mean_weight = mean(weight, na.rm = TRUE))\n\nsurveys %&gt;%\n    group_by(species, sex) %&gt;%\n    summarise(mean_weight = mean(weight, na.rm = TRUE))\n\n# to avoid using na.rm = FALSE each statistis\nsurveys %&gt;%\n    filter(!is.na(weight) %&gt;%\n    group_by(species, sex) %&gt;%\n    summarise(mean_weight = mean(weight), sd_weight = sd(weight), sd_count = n())\n\n# arrange by mean weight\nsurveys %&gt;%\n    filter(!is.na(weight) %&gt;%\n    group_by(species, sex) %&gt;%\n    summarise(mean_weight = mean(weight), sd_weight = sd(weight), sd_count = n()) %&gt;%\n    arrange(mean_weight)\n\n# in descending order\nsurveys %&gt;%\n    filter(!is.na(weight) %&gt;%\n    group_by(species, sex) %&gt;%\n    summarise(mean_weight = mean(weight), sd_weight = sd(weight), sd_count = n()) %&gt;%\n    arrange(desc(mean_weight))\n\n# by count\n    filter(!is.na(weight) %&gt;%\n    group_by(species, sex) %&gt;%\n    summarise(mean_weight = mean(weight), sd_weight = sd(weight), sd_count = n()) %&gt;%\n    arrange(count)\n\nCount of a categorical column\n\nsurveys %&gt;%\n    count(sex)\n\nReshaping with gather & spreed\n\n# prepare the needed data first\nsurveys_gw &lt;- surveys %&gt;%\n    filter(!na.rm(weight)) %&gt;%\n    group_by(genus, plot_id) %&gt;%\n    summarize(mean_weight = mean(weight))\n\n# creating a 2D table where each dimension represent a category\n# the cell will represent a statistis\nsurveys_spread &lt;- surveys_gw %&gt;%\n    spread(key = genus, value = mean_weight)\nstr(surveys_spread)\nhead(surveys_spread)\n\n# bring spread back\nsurveys_gw &lt;- surveys_spread %&gt;%\n    gather(key = genus, value = mean_weight, -plot_id)\nstr(surveys_gw)\nhead(surveys_gw)\n\nFiltering\n\n# Remove missing data\nsurvey_complete &lt;- surveys %&gt;%\n  filter(!is.na(weight), !is.na(hindfoot_length), !is.na(sex))\n\n# Filter those that has sample greater than 50\nspecies_counts &lt;- survey_complete %&gt;%\n  count(species_id) %&gt;%\n  filter(n &gt;= 50)\n\n# filter only those in the indicated category\nsurveys_com &lt;- surveys %&gt;%\n    filter(species_id %in% )\n\nSaving to disk\n\nwrite_cvs()",
    "crumbs": [
      "Home",
      "Notebooks",
      "Table of Content"
    ]
  },
  {
    "objectID": "src/r-basics.html#visualization-using-ggplot2",
    "href": "src/r-basics.html#visualization-using-ggplot2",
    "title": "Notebooks",
    "section": "Visualization Using ggplot2",
    "text": "Visualization Using ggplot2\n\nHelp in making complex plots from data frames in simple steps\nggplot graphhics are built step by step by adding new elements; this makes it flexible as well as customizable\n\nStep 1: Bind the plot to specific data frame\n\nsurveys_plot &lt;- ggplot(data = survey_complete, \n    mapping = aes(x = weight, y = hindfoot_length))\n\n# Color for each group\nsurveys_plot &lt;- ggplot(data = survey_complete, \n    mapping = aes(x = weight, y = hindfoot_length),\n    color=species_id)\n\nStep 2: Select the type of the plot\n\nscatter plot, dot plots, etc. &gt; geom_point()\nboxplots &gt; geom_boxplot()\ntrend lines, time series, etc. &gt; geom_line()\n\nScatter plot\n\nsurveys_plot + geom_point()\n\n# add transparency\nsurveys_plot + geom_point(alpha = 0.1)\n\n# color if not used in binding\nsurveys_plot + geom_point(alpah = 0.1, color = \"black\")\n\n# add color if not used in binding\nsurveys_plot + geom_point(alpaa = 0.1, aes(color = species_id))\n\n# make the color blend by introducing small ramdom variation in points locations\n# used when having small datasets\nsurveys_plot + geom_jitter(alpah = 0.1)\n\nBoxplot\n\nsurveys_plot &lt;- ggplot(data = survey_complete, \n    mapping = aes(x = species_id, y = weight))\n\nsurveys_plot + geom_boxplot()\n\n# show data\nsurvey_plot + geom_boxplot(alpah = 0.5) + \n    geom_jitter(alpha = 0.1, color = \"tomato\")\n\n# bring boxplot layer in front\nsurvey_plot + geom_jitter(alpah = 0.1, color = \"tomato\")\n    + geom_boxplot(alpha = 0.7)\n\nTime series data\n\n# create appropriate dataset\nyearly_count &lt;- survey_complete %&gt;%\n    count(year, species_id)\n\nsurveys_plot &lt;- ggplot(data = yearly_count, \n    mapping = aes(x = year, y = n))\n\nsurvey_plot + geom_line()\n\n# make it more meaningful by breaking it by category\nsurvey_plot + geom_line(aes(group = species_id))\n\n# make it more colorful\nsurvey_plot + geom_line(aes(color = species_id))\n\n# split into multiple plots\nsurvey_plot + geom_line() + facet_wrap(~ species_id)\n\n# split the line in each plot by sex\nyearly_sex_counts &lt;- survey_complete %&gt;%\n    count(year, species_id, sex)\n\nsurveys_plot &lt;- ggplot(data = yearly_sex_counts, \n    mapping = aes(x = year, y = n))\n\nsurveys_plot + geom_line(aes(color = sex))\n    + facet_wrap(~ species_id)\n\n# remove background\nsurveys_plot + geom_line(aes(color = sex))\n    + facet_wrap(~ species_id)\n    + theme_bw()\n    + theme(panel.grid = element_blank())",
    "crumbs": [
      "Home",
      "Notebooks",
      "Table of Content"
    ]
  }
]