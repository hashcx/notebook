{
  "hash": "90f14da47026bf19fa936a7f1e4b407c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Workflow: Scripts & Projects\"\nnumber-sections: true\n---\n\n\n## Clear Workspace, DON'T EDIT {-}\n\nAlways start by clearing the workspace. This ensure objects created in other files are not used here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list = ls())\n```\n:::\n\n\n## List Used Packages, EDIT {-}\n\nList all the packages that will be used in chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npackages <- c(\"tidyverse\")\n```\n:::\n\n\n\n## Load Packages, DON'T EDIT {#sec-packages -}\n\n### Install Missing {-}\n\nAny missing package will be installed automatically. This ensure smoother execution when run by others.\n\n::: callout-important\n\n#### Installing Packages on Other People Machine\n\nBe aware the people may not like installing packages into their machine automatically.  This might break some of their previous code.\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Do NOT modify\ninstall.packages(setdiff(packages, rownames(installed.packages())))\n```\n:::\n\n\n### Load {-}\n\nLoad all packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Do NOT modify\nlapply(packages, require, character.only = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: tidyverse\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n## Introduction\n\nThis chapter is about how to organize project files.\n\n## Diamond Example\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds |> \n  ggplot(aes(x = carat, y = price)) +\n  geom_hex()\n```\n\n::: {.cell-output-display}\n![](06-workflow-scripts-and-projects_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggsave(\"figures/diamonds.png\")\n\n# write_csv(diamonds, \"data/diamonds.csv\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}