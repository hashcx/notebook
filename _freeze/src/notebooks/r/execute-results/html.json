{
  "hash": "458e2c5bab948b65c7e7cc05537b7626",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R\"\neval: true\n---\n\n\n## General Notes\n\n- When writing R code, create a project instead of a file which will enable saving the workspace settings\n- An R package usually includes:\n  a. reusable functions\n  b. documentation describing how to use the function\n  c. sample data\n- Before running a project, clear the objects in its workspace environment to avoid mixing up objects created in other files.  This can be done either:\n  a. pragmatically as shown below OR \n  b. Environment window -> Broom icon\n  \n\n\nClear the objects in its workspace environment to avoid mixing up objects created in other files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list = ls())\n```\n:::\n\n\nList all the packages that will be used in this script.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npackages = c(\"here\")\n```\n:::\n\n\n\nAny missing package will be installed automatically\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Do NOT modify\ninstall.packages(setdiff(packages, rownames(installed.packages())))\n```\n:::\n\n\nLoad all packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Do NOT modify\nlapply(packages, require, character.only = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n## Data Types\n\n-   character\n-   numeric\n-   logical\n-   raw\n-   imaginary numbers\n\nTo know the datatype of an object, run the command:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(x)\t# give the data type of x\n```\n:::\n\n\n### Mixing Data Types\n\n-   character + numeric --\\> character\n-   numeric + logical --\\> numeric\n-   numeric + character + logical --\\> character\n\n## Data Structures\n\n-   **vector**: hold single type of data\n-   **matrix**: 2D vector\n-   **array**: nD vector\n-   **list**: generic vector, can hold mixed type of data, eg, one element can a character, another a list of integers, and the third could be a logical\n-   **data frame**: table where columns represent vectors\n-   **tibbles**: data frames, but slightly tweaked to work better with `tidyverse` package\n-   **factor**\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Common data structures in R (Source: [Grolemund, 2014](https://jjallaire.github.io/hopr/objects.html))\n](../images/datastructure.png){#fig-datastructure width=256}\n:::\n:::\n\n\n\nTo know the data structure and length of the object, run the command:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(x)\t\t# give the structure type of x\nlength(x)\t# length of structure\n```\n:::\n\n\n## Basics Operations\n\nAssignment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 3\t\t# assign 3 to x\n(x <- 3)\t# assign 3 to x & print the result to console\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\nGetting Help\n\n\n::: {.cell}\n\n```{.r .cell-code}\nargs(round)\t# print the argument list of function\n?round\t\t  # show documentation of function in Help window\n```\n:::\n\n\nDealing with Structure\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# concatenate set of values to create vector\nweight_g <- c(50, 60, 3, 9)\nanimals <- c(\"dog\", \"bat\", \"cat\")\n\n# utilizing logical values to pull specific values\nweight_g[weight_g < 10 & weight_g > 60 | weight_g == 50]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 50\n```\n\n\n:::\n\n```{.r .cell-code}\n# pull dog & cat records\nanimals[animals %in% c(\"dog\", \"cat\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"dog\" \"cat\"\n```\n\n\n:::\n\n```{.r .cell-code}\nanimals[animals == \"dog\" | animals == \"cat\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"dog\" \"cat\"\n```\n\n\n:::\n:::\n\n\nStatistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# signaling missing data using NA\nheights <- c(2, 3, NA, 4)\n\n# get mean while ignoring missing data\nmean(heights, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n\n```{.r .cell-code}\n# how to use mean\n# ?mean\n```\n:::\n\n\n## Exploratory Operations\n\nThe `here` package makes it easy to point to files starting from the project main directory.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\n```\n:::\n\n\nLoading file from repository and saving it locally on disk. It is always a good idea to structure the workspace--for more information, see [Best Practices for Scientific Computing paper](http://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.1001745).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndownload.file(url = \"https://ndownloader.figshare.com/files/2292169\", \n\tdestfile = here(\"data\", \"portal_data_joined.csv\"))\n```\n:::\n\n\nLoad file to R as data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys <- read.csv(here(\"data\", \"portal_data_joined.csv\"))\n```\n:::\n\n\nInspecting data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(surveys)\t# data type\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"data.frame\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(surveys)\t  # structure\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t34786 obs. of  13 variables:\n $ record_id      : int  1 72 224 266 349 363 435 506 588 661 ...\n $ month          : int  7 8 9 10 11 11 12 1 2 3 ...\n $ day            : int  16 19 13 16 12 12 10 8 18 11 ...\n $ year           : int  1977 1977 1977 1977 1977 1977 1977 1978 1978 1978 ...\n $ plot_id        : int  2 2 2 2 2 2 2 2 2 2 ...\n $ species_id     : chr  \"NL\" \"NL\" \"NL\" \"NL\" ...\n $ sex            : chr  \"M\" \"M\" \"\" \"\" ...\n $ hindfoot_length: int  32 31 NA NA NA NA NA NA NA NA ...\n $ weight         : int  NA NA NA NA NA NA NA NA 218 NA ...\n $ genus          : chr  \"Neotoma\" \"Neotoma\" \"Neotoma\" \"Neotoma\" ...\n $ species        : chr  \"albigula\" \"albigula\" \"albigula\" \"albigula\" ...\n $ taxa           : chr  \"Rodent\" \"Rodent\" \"Rodent\" \"Rodent\" ...\n $ plot_type      : chr  \"Control\" \"Control\" \"Control\" \"Control\" ...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(surveys)\t  # dimensions\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 34786    13\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(surveys)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 34786\n```\n\n\n:::\n\n```{.r .cell-code}\nncol(surveys)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 13\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(surveys)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   record_id         month             day            year         plot_id     \n Min.   :    1   Min.   : 1.000   Min.   : 1.0   Min.   :1977   Min.   : 1.00  \n 1st Qu.: 8964   1st Qu.: 4.000   1st Qu.: 9.0   1st Qu.:1984   1st Qu.: 5.00  \n Median :17762   Median : 6.000   Median :16.0   Median :1990   Median :11.00  \n Mean   :17804   Mean   : 6.474   Mean   :16.1   Mean   :1990   Mean   :11.34  \n 3rd Qu.:26655   3rd Qu.:10.000   3rd Qu.:23.0   3rd Qu.:1997   3rd Qu.:17.00  \n Max.   :35548   Max.   :12.000   Max.   :31.0   Max.   :2002   Max.   :24.00  \n                                                                               \n  species_id            sex            hindfoot_length     weight      \n Length:34786       Length:34786       Min.   : 2.00   Min.   :  4.00  \n Class :character   Class :character   1st Qu.:21.00   1st Qu.: 20.00  \n Mode  :character   Mode  :character   Median :32.00   Median : 37.00  \n                                       Mean   :29.29   Mean   : 42.67  \n                                       3rd Qu.:36.00   3rd Qu.: 48.00  \n                                       Max.   :70.00   Max.   :280.00  \n                                       NA's   :3348    NA's   :2503    \n    genus             species              taxa            plot_type        \n Length:34786       Length:34786       Length:34786       Length:34786      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n```\n\n\n:::\n:::\n\n\nShow first/last few objects/records/rows\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(surveys)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  record_id month day year plot_id species_id sex hindfoot_length weight\n1         1     7  16 1977       2         NL   M              32     NA\n2        72     8  19 1977       2         NL   M              31     NA\n3       224     9  13 1977       2         NL                  NA     NA\n4       266    10  16 1977       2         NL                  NA     NA\n5       349    11  12 1977       2         NL                  NA     NA\n6       363    11  12 1977       2         NL                  NA     NA\n    genus  species   taxa plot_type\n1 Neotoma albigula Rodent   Control\n2 Neotoma albigula Rodent   Control\n3 Neotoma albigula Rodent   Control\n4 Neotoma albigula Rodent   Control\n5 Neotoma albigula Rodent   Control\n6 Neotoma albigula Rodent   Control\n```\n\n\n:::\n\n```{.r .cell-code}\ntail(surveys)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      record_id month day year plot_id species_id sex hindfoot_length weight\n34781     26787     9  27 1997       7         PL   F              21     16\n34782     26966    10  25 1997       7         PL   M              20     16\n34783     27185    11  22 1997       7         PL   F              21     22\n34784     27792     5   2 1998       7         PL   F              20      8\n34785     28806    11  21 1998       7         PX                  NA     NA\n34786     30986     7   1 2000       7         PX                  NA     NA\n            genus  species   taxa        plot_type\n34781  Peromyscus leucopus Rodent Rodent Exclosure\n34782  Peromyscus leucopus Rodent Rodent Exclosure\n34783  Peromyscus leucopus Rodent Rodent Exclosure\n34784  Peromyscus leucopus Rodent Rodent Exclosure\n34785 Chaetodipus      sp. Rodent Rodent Exclosure\n34786 Chaetodipus      sp. Rodent Rodent Exclosure\n```\n\n\n:::\n:::\n\n\n### Retrieve specific element/row/column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys[1,1]\t# element[1,1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code}\nsurveys[1, ]\t# row 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  record_id month day year plot_id species_id sex hindfoot_length weight\n1         1     7  16 1977       2         NL   M              32     NA\n    genus  species   taxa plot_type\n1 Neotoma albigula Rodent   Control\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(surveys[ ,1])\t# column 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]   1  72 224 266 349 363\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(surveys$sex)\t  # column by name\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"M\" \"M\" \"\"  \"\"  \"\"  \"\" \n```\n\n\n:::\n:::\n\n\n### Dealing with factor (categorical) columns\n\nR convert columns that contain characters to factors by default. Factors are treated as integer vectors. By default, R sorts levels in alphabetical order.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(surveys$sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n\n```{.r .cell-code}\nnlevels(surveys$sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\nReorder factors (to get better plots)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys$sex_ordered <- factor(surveys$sex, level=c(\"F\", \"M\", \"\"))\nstr(surveys$sex_ordered)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Factor w/ 3 levels \"F\",\"M\",\"\": 2 2 3 3 3 3 3 3 2 3 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(surveys$sex_ordered)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"F\" \"M\" \"\" \n```\n\n\n:::\n\n```{.r .cell-code}\nnlevels(surveys$sex_ordered)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n### Basic Plotting\n\nHistogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot(surveys$sex)  # not possible\nplot(surveys$sex_ordered)\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nEnhance the plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(surveys$sex_ordered)[1] <- \"Female\"\nlevels(surveys$sex_ordered)[2] <- \"Male\"\nplot(surveys$sex_ordered)\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n## Data Manipulation\n\n-   `tdlyr`\n    -   makes manipulation of data easier\n    -   built to work with data frames directly\n    -   can directly work with data stored in an external database which give the advantage of only bringing what we need to the memory to work on without having to bring the whole database\n-   `tidyr`\n    -   allows to swiftly convert b/w different data formats for plotting & analysis in order to accommodate the different requirements by different functions\n        -   sometime we want one row per measurement\n        -   other times we want the data aggregated like when plotting\n\nBefore using `tdlyr` and `tidyr`:\n\n-   Install `tidyverse` package: umbrella-package that install several packages (tidyr, dplyr, ggplot2 tibble, magrittr, etc.)\n-   Load the package each session\n\nLoad packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\nLoad & inspect data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# notice the '_' instead of '.' of basic R\nsurveys <- read_csv(here(\"data\", \"portal_data_joined.csv\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 34786 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): species_id, sex, genus, species, taxa, plot_type\ndbl (7): record_id, month, day, year, plot_id, hindfoot_length, weight\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(surveys)\t# structure: tbl_df (tibble)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [34,786 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ record_id      : num [1:34786] 1 72 224 266 349 363 435 506 588 661 ...\n $ month          : num [1:34786] 7 8 9 10 11 11 12 1 2 3 ...\n $ day            : num [1:34786] 16 19 13 16 12 12 10 8 18 11 ...\n $ year           : num [1:34786] 1977 1977 1977 1977 1977 ...\n $ plot_id        : num [1:34786] 2 2 2 2 2 2 2 2 2 2 ...\n $ species_id     : chr [1:34786] \"NL\" \"NL\" \"NL\" \"NL\" ...\n $ sex            : chr [1:34786] \"M\" \"M\" NA NA ...\n $ hindfoot_length: num [1:34786] 32 31 NA NA NA NA NA NA NA NA ...\n $ weight         : num [1:34786] NA NA NA NA NA NA NA NA 218 NA ...\n $ genus          : chr [1:34786] \"Neotoma\" \"Neotoma\" \"Neotoma\" \"Neotoma\" ...\n $ species        : chr [1:34786] \"albigula\" \"albigula\" \"albigula\" \"albigula\" ...\n $ taxa           : chr [1:34786] \"Rodent\" \"Rodent\" \"Rodent\" \"Rodent\" ...\n $ plot_type      : chr [1:34786] \"Control\" \"Control\" \"Control\" \"Control\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   record_id = col_double(),\n  ..   month = col_double(),\n  ..   day = col_double(),\n  ..   year = col_double(),\n  ..   plot_id = col_double(),\n  ..   species_id = col_character(),\n  ..   sex = col_character(),\n  ..   hindfoot_length = col_double(),\n  ..   weight = col_double(),\n  ..   genus = col_character(),\n  ..   species = col_character(),\n  ..   taxa = col_character(),\n  ..   plot_type = col_character()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n\n```{.r .cell-code}\n# view(surveys)\t# preview in the viewer window, avoid when rendering\n```\n:::\n\n\n### Selection\n\nSelect certain columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(surveys, plot_id, species_id, weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 34,786 × 3\n   plot_id species_id weight\n     <dbl> <chr>       <dbl>\n 1       2 NL             NA\n 2       2 NL             NA\n 3       2 NL             NA\n 4       2 NL             NA\n 5       2 NL             NA\n 6       2 NL             NA\n 7       2 NL             NA\n 8       2 NL             NA\n 9       2 NL            218\n10       2 NL             NA\n# ℹ 34,776 more rows\n```\n\n\n:::\n:::\n\n\nSelect all columns except ...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(surveys, -sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 34,786 × 12\n   record_id month   day  year plot_id species_id hindfoot_length weight genus  \n       <dbl> <dbl> <dbl> <dbl>   <dbl> <chr>                <dbl>  <dbl> <chr>  \n 1         1     7    16  1977       2 NL                      32     NA Neotoma\n 2        72     8    19  1977       2 NL                      31     NA Neotoma\n 3       224     9    13  1977       2 NL                      NA     NA Neotoma\n 4       266    10    16  1977       2 NL                      NA     NA Neotoma\n 5       349    11    12  1977       2 NL                      NA     NA Neotoma\n 6       363    11    12  1977       2 NL                      NA     NA Neotoma\n 7       435    12    10  1977       2 NL                      NA     NA Neotoma\n 8       506     1     8  1978       2 NL                      NA     NA Neotoma\n 9       588     2    18  1978       2 NL                      NA    218 Neotoma\n10       661     3    11  1978       2 NL                      NA     NA Neotoma\n# ℹ 34,776 more rows\n# ℹ 3 more variables: species <chr>, taxa <chr>, plot_type <chr>\n```\n\n\n:::\n:::\n\n\nSelect rows based on criteria\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(surveys, year == 1995)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,180 × 13\n   record_id month   day  year plot_id species_id sex   hindfoot_length weight\n       <dbl> <dbl> <dbl> <dbl>   <dbl> <chr>      <chr>           <dbl>  <dbl>\n 1     22314     6     7  1995       2 NL         M                  34     NA\n 2     22728     9    23  1995       2 NL         F                  32    165\n 3     22899    10    28  1995       2 NL         F                  32    171\n 4     23032    12     2  1995       2 NL         F                  33     NA\n 5     22003     1    11  1995       2 DM         M                  37     41\n 6     22042     2     4  1995       2 DM         F                  36     45\n 7     22044     2     4  1995       2 DM         M                  37     46\n 8     22105     3     4  1995       2 DM         F                  37     49\n 9     22109     3     4  1995       2 DM         M                  37     46\n10     22168     4     1  1995       2 DM         M                  36     48\n# ℹ 1,170 more rows\n# ℹ 4 more variables: genus <chr>, species <chr>, taxa <chr>, plot_type <chr>\n```\n\n\n:::\n:::\n\n\n### Piping\n\nSending the results of one function to another\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# in multiple steps\nsurvey_less5 <- filter(surveys, weight < 5)\nsurvey_sml <- select(survey_less5, species_id, sex, weight)\n\n# in one long step\nsurvey_sml <- select(filter(surveys, weight < 5), species_id, sex, weight)\n\n# using pipe %>% of magritter package.  Use Ctrl + Shift + M to add\nsurvey_sml <- surveys %>%\n\tfilter(weight < 5) %>%\n\tselect(species_id, sex, weight)\n```\n:::\n\n\n### Summary\n\nSummary of groups (1+ columns)\n\none factor\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys %>%\n\tgroup_by(sex) %>%\n\tsummarise(mean_weight = mean(weight, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  sex   mean_weight\n  <chr>       <dbl>\n1 F            42.2\n2 M            43.0\n3 <NA>         64.7\n```\n\n\n:::\n:::\n\n\ntwo factors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys %>%\n\tgroup_by(sex, species) %>%\n\tsummarise(mean_weight = mean(weight, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'sex'. You can override using the `.groups`\nargument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 81 × 3\n# Groups:   sex [3]\n   sex   species     mean_weight\n   <chr> <chr>             <dbl>\n 1 F     albigula         154.  \n 2 F     baileyi           30.2 \n 3 F     eremicus          22.8 \n 4 F     flavus             7.97\n 5 F     fulvescens        13.7 \n 6 F     fulviventer       69   \n 7 F     hispidus          69.0 \n 8 F     leucogaster       31.1 \n 9 F     leucopus          19.3 \n10 F     maniculatus       22.1 \n# ℹ 71 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nsurveys %>%\n\tgroup_by(species, sex) %>%\n\tsummarise(mean_weight = mean(weight, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 81 × 3\n# Groups:   species [40]\n   species         sex   mean_weight\n   <chr>           <chr>       <dbl>\n 1 albigula        F           154. \n 2 albigula        M           166. \n 3 albigula        <NA>        168. \n 4 audubonii       <NA>        NaN  \n 5 baileyi         F            30.2\n 6 baileyi         M            33.8\n 7 baileyi         <NA>         30.6\n 8 bilineata       <NA>        NaN  \n 9 brunneicapillus <NA>        NaN  \n10 chlorurus       <NA>        NaN  \n# ℹ 71 more rows\n```\n\n\n:::\n:::\n\n\nto avoid using `na.rm = FALSE` each statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys %>%\n\tfilter(!is.na(weight)) %>%\n\tgroup_by(species, sex) %>%\n\tsummarise(mean_weight = mean(weight), sd_weight = sd(weight), sd_count = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 59 × 5\n# Groups:   species [22]\n   species  sex   mean_weight sd_weight sd_count\n   <chr>    <chr>       <dbl>     <dbl>    <int>\n 1 albigula F          154.      39.2        652\n 2 albigula M          166.      49.0        484\n 3 albigula <NA>       168.      44.2         16\n 4 baileyi  F           30.2      5.27      1617\n 5 baileyi  M           33.8      8.27      1188\n 6 baileyi  <NA>        30.6      9.96         5\n 7 eremicus F           22.8      4.57       568\n 8 eremicus M           20.6      3.49       689\n 9 eremicus <NA>        17.7      0.577        3\n10 flavus   F            7.97     1.69       742\n# ℹ 49 more rows\n```\n\n\n:::\n:::\n\n\narrange by mean weight\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys %>%\n\tfilter(!is.na(weight)) %>%\n\tgroup_by(species, sex) %>%\n\tsummarise(mean_weight = mean(weight), sd_weight = sd(weight), sd_count = n()) %>%\n\tarrange(mean_weight)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 59 × 5\n# Groups:   species [22]\n   species   sex   mean_weight sd_weight sd_count\n   <chr>     <chr>       <dbl>     <dbl>    <int>\n 1 flavus    <NA>         6        1.63         4\n 2 taylori   M            7.36     0.842       14\n 3 flavus    M            7.89     1.59       802\n 4 flavus    F            7.97     1.69       742\n 5 taylori   F            9.16     2.24        31\n 6 montanus  M            9.5      1.29         4\n 7 megalotis M           10.1      1.73      1339\n 8 montanus  F           11        2.16         4\n 9 megalotis <NA>        11.1      2.57        12\n10 megalotis F           11.1      2.56      1184\n# ℹ 49 more rows\n```\n\n\n:::\n:::\n\n\nin descending order\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys %>%\n\tfilter(!is.na(weight)) %>%\n\tgroup_by(species, sex) %>%\n\tsummarise(mean_weight = mean(weight), sd_weight = sd(weight), sd_count = n()) %>%\n\tarrange(desc(mean_weight))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 59 × 5\n# Groups:   species [22]\n   species     sex   mean_weight sd_weight sd_count\n   <chr>       <chr>       <dbl>     <dbl>    <int>\n 1 albigula    <NA>        168.       44.2       16\n 2 albigula    M           166.       49.0      484\n 3 albigula    F           154.       39.2      652\n 4 hispidus    <NA>        130        NA          1\n 5 spilosoma   M           130        NA          1\n 6 spectabilis M           122.       24.0     1220\n 7 spectabilis <NA>        120        18.5       18\n 8 spectabilis F           118.       21.5     1106\n 9 fulviventer F            69        37.8       16\n10 hispidus    F            69.0      29.7       98\n# ℹ 49 more rows\n```\n\n\n:::\n:::\n\n\nby count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys %>%\n\tfilter(!is.na(weight)) %>%\n\tgroup_by(species, sex) %>%\n\tsummarise(mean_weight = mean(weight), sd_weight = sd(weight), sd_count = n()) %>%\n\tarrange(sd_count)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 59 × 5\n# Groups:   species [22]\n   species     sex   mean_weight sd_weight sd_count\n   <chr>       <chr>       <dbl>     <dbl>    <int>\n 1 hispidus    <NA>        130      NA            1\n 2 intermedius <NA>         18      NA            1\n 3 leucopus    <NA>         25      NA            1\n 4 spilosoma   F            57      NA            1\n 5 spilosoma   M           130      NA            1\n 6 fulviventer <NA>         40.5     6.36         2\n 7 leucogaster <NA>         29      11.3          2\n 8 eremicus    <NA>         17.7     0.577        3\n 9 ordii       <NA>         50.7     6.51         3\n10 sp.         F            20.7     1.15         3\n# ℹ 49 more rows\n```\n\n\n:::\n:::\n\n\n### Count\n\nCount of a categorical column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys %>%\n\tcount(sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  sex       n\n  <chr> <int>\n1 F     15690\n2 M     17348\n3 <NA>   1748\n```\n\n\n:::\n:::\n\n\n### Reshaping\n\nUsing gather & spreed\n\nprepare the needed data first\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys_gw <- surveys %>%\n\tfilter(!is.na(weight)) %>%\n\tgroup_by(genus, plot_id) %>%\n\tsummarize(mean_weight = mean(weight))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'genus'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n\ncreating a 2D table where each dimension represent a category the cell will represent a statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys_spread <- surveys_gw %>%\n\tspread(key = genus, value = mean_weight)\nstr(surveys_spread)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [24 × 11] (S3: tbl_df/tbl/data.frame)\n $ plot_id        : num [1:24] 1 2 3 4 5 6 7 8 9 10 ...\n $ Baiomys        : num [1:24] 7 6 8.61 NA 7.75 ...\n $ Chaetodipus    : num [1:24] 22.2 25.1 24.6 23 18 ...\n $ Dipodomys      : num [1:24] 60.2 55.7 52 57.5 51.1 ...\n $ Neotoma        : num [1:24] 156 169 158 164 190 ...\n $ Onychomys      : num [1:24] 27.7 26.9 26 28.1 27 ...\n $ Perognathus    : num [1:24] 9.62 6.95 7.51 7.82 8.66 ...\n $ Peromyscus     : num [1:24] 22.2 22.3 21.4 22.6 21.2 ...\n $ Reithrodontomys: num [1:24] 11.4 10.7 10.5 10.3 11.2 ...\n $ Sigmodon       : num [1:24] NA 70.9 65.6 82 82.7 ...\n $ Spermophilus   : num [1:24] NA NA NA NA NA NA NA NA NA NA ...\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(surveys_spread)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 11\n  plot_id Baiomys Chaetodipus Dipodomys Neotoma Onychomys Perognathus Peromyscus\n    <dbl>   <dbl>       <dbl>     <dbl>   <dbl>     <dbl>       <dbl>      <dbl>\n1       1    7           22.2      60.2    156.      27.7        9.62       22.2\n2       2    6           25.1      55.7    169.      26.9        6.95       22.3\n3       3    8.61        24.6      52.0    158.      26.0        7.51       21.4\n4       4   NA           23.0      57.5    164.      28.1        7.82       22.6\n5       5    7.75        18.0      51.1    190.      27.0        8.66       21.2\n6       6   NA           24.9      58.6    180.      25.9        7.81       21.8\n# ℹ 3 more variables: Reithrodontomys <dbl>, Sigmodon <dbl>, Spermophilus <dbl>\n```\n\n\n:::\n:::\n\n\nbring spread back\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys_gw <- surveys_spread %>%\n\tgather(key = genus, value = mean_weight, -plot_id)\nstr(surveys_gw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [240 × 3] (S3: tbl_df/tbl/data.frame)\n $ plot_id    : num [1:240] 1 2 3 4 5 6 7 8 9 10 ...\n $ genus      : chr [1:240] \"Baiomys\" \"Baiomys\" \"Baiomys\" \"Baiomys\" ...\n $ mean_weight: num [1:240] 7 6 8.61 NA 7.75 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(surveys_gw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  plot_id genus   mean_weight\n    <dbl> <chr>         <dbl>\n1       1 Baiomys        7   \n2       2 Baiomys        6   \n3       3 Baiomys        8.61\n4       4 Baiomys       NA   \n5       5 Baiomys        7.75\n6       6 Baiomys       NA   \n```\n\n\n:::\n:::\n\n\n### Filtering\n\nRemove missing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_complete <- surveys %>%\n  filter(!is.na(weight), !is.na(hindfoot_length), !is.na(sex))\n```\n:::\n\n\nFilter those that has sample greater than 50\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspecies_counts <- survey_complete %>%\n  count(species_id) %>%\n  filter(n >= 50)\n```\n:::\n\n\nfilter only those in the indicated category\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys_com <- surveys %>%\n\tfilter(species_id %in% c(\"albigula\", \"eremicus\"))\n```\n:::\n\n\n### Saving to disk\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_cvs()\n```\n:::\n\n\n## Visualization\n\n-   Help in making complex plots from data frames in simple steps\n-   ggplot graphics are built step by step by adding new elements; this makes it flexible as well as customization\n\nStep 1: Bind the plot to specific data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys_plot <- ggplot(data = survey_complete, \n\tmapping = aes(x = weight, y = hindfoot_length))\n\n# Color for each group\nsurveys_plot <- ggplot(data = survey_complete, \n\tmapping = aes(x = weight, y = hindfoot_length),\n\tcolor=species_id)\n```\n:::\n\n\nStep 2: Select the type of the plot\n\n-   scatter plot, dot plots, etc. \\> geom_point()\n-   boxplots \\> geom_boxplot()\n-   trend lines, time series, etc. \\> geom_line()\n\n### Scatter plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys_plot + geom_point()\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# add transparency\nsurveys_plot + geom_point(alpha = 0.1)\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-43-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# color if not used in binding\nsurveys_plot + geom_point(alpha = 0.1, color = \"black\")\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-43-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# add color if not used in binding\nsurveys_plot + geom_point(alpha = 0.1, aes(color = species_id))\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-43-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# make the color blend by introducing small random variation in points locations\n# used when having small data sets\nsurveys_plot + geom_jitter(alpha = 0.1)\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-43-5.png){width=672}\n:::\n:::\n\n\n### Boxplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys_plot <- ggplot(data = survey_complete, \n\tmapping = aes(x = species_id, y = weight))\n\nsurveys_plot + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# show data\nsurveys_plot + geom_boxplot(alpha = 0.5) + \n\tgeom_jitter(alpha = 0.1, color = \"tomato\")\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-44-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# bring boxplot layer in front\nsurveys_plot + geom_jitter(alpha = 0.1, color = \"tomato\") +\n\tgeom_boxplot(alpha = 0.7)\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-44-3.png){width=672}\n:::\n:::\n\n\n### Time series data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create appropriate dataset\nyearly_count <- survey_complete %>%\n\tcount(year, species_id)\n\nsurveys_plot <- ggplot(data = yearly_count, \n\tmapping = aes(x = year, y = n))\n\nsurveys_plot + geom_line()\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# make it more meaningful by breaking it by category\nsurveys_plot + geom_line(aes(group = species_id))\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-45-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# make it more colorful\nsurveys_plot + geom_line(aes(color = species_id))\n```\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-45-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# split into multiple plots\nsurveys_plot + geom_line() + facet_wrap(~ species_id)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-45-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# split the line in each plot by sex\nyearly_sex_counts <- survey_complete %>%\n\tcount(year, species_id, sex)\n\nsurveys_plot <- ggplot(data = yearly_sex_counts, \n\tmapping = aes(x = year, y = n))\n\nsurveys_plot + geom_line(aes(color = sex)) +\n\tfacet_wrap(~ species_id)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-45-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# remove background\nsurveys_plot + geom_line(aes(color = sex)) +\n\tfacet_wrap(~ species_id) +\n\ttheme_bw() +\n\ttheme(panel.grid = element_blank())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](r_files/figure-html/unnamed-chunk-45-6.png){width=672}\n:::\n:::\n\n\n## References\n\n-   OU Software Carpentry Workshop (check other workshops [here](https://libraries.ou.edu/content/software-and-data-carpentry))\n    -   [Main Tutorial](https://oulib-swc.github.io/2019-05-15-ou-swc/)\n    -   [Data Carpentry with R](https://datacarpentry.org/R-ecology-lesson/index.html)\n    -   [Software Carpentry with R](https://swcarpentry.github.io/r-novice-gapminder/)\n    -   [Etherpad](https://pad.carpentries.org/2019-05-15-ou-swc)\n    -   [Google Doc](https://docs.google.com/document/d/1aJq_X1uhaNkUj7qdZEzOcpc2Pky7eZPy76yqs0UkfrQ/edit)\n-   [Intro to ggplot](https://rawcdn.githack.com/allisonhorst/data-vis/fc107e063f50ef8695b0a75ed73d74720aca2c65/data_vis_np.html) by [Allison Horst](https://github.com/allisonhorst)\n-   [R for Data Science book by Garrett Grolemund and Hadley Wickham](https://r4ds.had.co.nz/)\n-   [Best Practices for Scientific Computing paper](http://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.1001745)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}